#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "bakery")]
public partial class Bakery : System.Data.Linq.DataContext
{

    private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertImages(Images instance);
    partial void UpdateImages(Images instance);
    partial void DeleteImages(Images instance);
    #endregion

    public Bakery(string connection) :
        base(connection, mappingSource)
    {
        OnCreated();
    }

    public Bakery(System.Data.IDbConnection connection) :
        base(connection, mappingSource)
    {
        OnCreated();
    }

    public Bakery(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
        base(connection, mappingSource)
    {
        OnCreated();
    }

    public Bakery(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
        base(connection, mappingSource)
    {
        OnCreated();
    }

    public System.Data.Linq.Table<Images> Images
    {
        get
        {
            return this.GetTable<Images>();
        }
    }
}

[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Images")]
public partial class Images : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _Id;

    private string _Description;

    private string _Location;

    private string _CommonName;

    private System.Nullable<int> _ImageType;

    private System.Nullable<System.DateTime> _BakedOn;

    private System.Nullable<int> _Provider;

    private System.Nullable<int> _OS_Family;

    private string _OS_Version;

    private System.Nullable<bool> _Approved;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnCommonNameChanging(string value);
    partial void OnCommonNameChanged();
    partial void OnImageTypeChanging(System.Nullable<int> value);
    partial void OnImageTypeChanged();
    partial void OnBakedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnBakedOnChanged();
    partial void OnProviderChanging(System.Nullable<int> value);
    partial void OnProviderChanged();
    partial void OnOS_FamilyChanging(System.Nullable<int> value);
    partial void OnOS_FamilyChanged();
    partial void OnOS_VersionChanging(string value);
    partial void OnOS_VersionChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    #endregion

    public Images()
    {
        OnCreated();
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "NVarChar(50) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string Id
    {
        get
        {
            return this._Id;
        }
        set
        {
            if ((this._Id != value))
            {
                this.OnIdChanging(value);
                this.SendPropertyChanging();
                this._Id = value;
                this.SendPropertyChanged("Id");
                this.OnIdChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "NVarChar(250)")]
    public string Description
    {
        get
        {
            return this._Description;
        }
        set
        {
            if ((this._Description != value))
            {
                this.OnDescriptionChanging(value);
                this.SendPropertyChanging();
                this._Description = value;
                this.SendPropertyChanged("Description");
                this.OnDescriptionChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Location", DbType = "NVarChar(250)")]
    public string Location
    {
        get
        {
            return this._Location;
        }
        set
        {
            if ((this._Location != value))
            {
                this.OnLocationChanging(value);
                this.SendPropertyChanging();
                this._Location = value;
                this.SendPropertyChanged("Location");
                this.OnLocationChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CommonName", DbType = "NVarChar(50)")]
    public string CommonName
    {
        get
        {
            return this._CommonName;
        }
        set
        {
            if ((this._CommonName != value))
            {
                this.OnCommonNameChanging(value);
                this.SendPropertyChanging();
                this._CommonName = value;
                this.SendPropertyChanged("CommonName");
                this.OnCommonNameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImageType", DbType = "Int")]
    public System.Nullable<int> ImageType
    {
        get
        {
            return this._ImageType;
        }
        set
        {
            if ((this._ImageType != value))
            {
                this.OnImageTypeChanging(value);
                this.SendPropertyChanging();
                this._ImageType = value;
                this.SendPropertyChanged("ImageType");
                this.OnImageTypeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BakedOn", DbType = "DateTime")]
    public System.Nullable<System.DateTime> BakedOn
    {
        get
        {
            return this._BakedOn;
        }
        set
        {
            if ((this._BakedOn != value))
            {
                this.OnBakedOnChanging(value);
                this.SendPropertyChanging();
                this._BakedOn = value;
                this.SendPropertyChanged("BakedOn");
                this.OnBakedOnChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Provider", DbType = "Int")]
    public System.Nullable<int> Provider
    {
        get
        {
            return this._Provider;
        }
        set
        {
            if ((this._Provider != value))
            {
                this.OnProviderChanging(value);
                this.SendPropertyChanging();
                this._Provider = value;
                this.SendPropertyChanged("Provider");
                this.OnProviderChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OS_Family", DbType = "Int")]
    public System.Nullable<int> OS_Family
    {
        get
        {
            return this._OS_Family;
        }
        set
        {
            if ((this._OS_Family != value))
            {
                this.OnOS_FamilyChanging(value);
                this.SendPropertyChanging();
                this._OS_Family = value;
                this.SendPropertyChanged("OS_Family");
                this.OnOS_FamilyChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OS_Version", DbType = "NVarChar(50)")]
    public string OS_Version
    {
        get
        {
            return this._OS_Version;
        }
        set
        {
            if ((this._OS_Version != value))
            {
                this.OnOS_VersionChanging(value);
                this.SendPropertyChanging();
                this._OS_Version = value;
                this.SendPropertyChanged("OS_Version");
                this.OnOS_VersionChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Approved", DbType = "Bit")]
    public System.Nullable<bool> Approved
    {
        get
        {
            return this._Approved;
        }
        set
        {
            if ((this._Approved != value))
            {
                this.OnApprovedChanging(value);
                this.SendPropertyChanging();
                this._Approved = value;
                this.SendPropertyChanged("Approved");
                this.OnApprovedChanged();
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
#pragma warning restore 1591
